#!groovy

properties([disableConcurrentBuilds()])

def ot = 'Type of object'

pipeline {
    parameters {
            choice(choices: ['Cube', 'Sphere', 'Cone', 'Torus'], description: '', name: 'Type_of_objects')
            string(defaultValue: '', description: '', name: 'Count_of_objects', trim: false)
            choice(choices: ['IES', 'Physical'], description: '', name: 'Type_of_light')
            string(defaultValue: '', description: '', name: 'Count_of_materials', trim: false) 
            string(defaultValue: '', description: '', name: 'Count_of_light', trim: false) 
            booleanParam(defaultValue: false, description: '', name: 'Use_IBL')
            string(defaultValue: '', description: '', name: 'Max_Samples', trim: false) 
            string(defaultValue: '', description: '', name: 'Threshold', trim: false)
    }
    agent { 
        label 'Agent'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage('Show Render Info'){
            steps{
                bat 'Render -r FireRender -help'
            }
        }
        stage('Show Parameters') {
            steps {
                echo "${params}"
            }
        }
        /*stage('Craete Scene') {
            steps {
                bat "mayapy D:/Workspace/test_scpirts/test.py -ot ${params.Type_of_objects} -oc ${params.Count_of_objects} -lt ${params.Type_of_light} -mc ${params.Count_of_materials} -lc ${params.Count_of_light} -ibl ${params.Use_IBL} -ms ${params.Max_Samples} -th ${params.Threshold}"
                bat 'ipconfig'
            }
        }
        
        stage('Render Scene'){
            steps {
                bat "render -r FireRender -proj mayaimages -rd C:/Users/Denispoper/Desktop/mayaimages -of jpeg -im fulltest -x 1920 -y 1080 C:/Users/Denispoper/Desktop/mayaimages/test.mb"
            }
        }\*/
    }
    post {
        always {
            archiveArtifacts "testResultImage.jpg , metadata.txt"
        }
    }
}

